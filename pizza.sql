-- MySQL Script generated by MySQL Workbench
-- Sat Jan 19 16:46:49 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema pizza_fastspring
-- -----------------------------------------------------
-- Inventory & order for restaurant
DROP SCHEMA IF EXISTS `pizza_fastspring` ;

-- -----------------------------------------------------
-- Schema pizza_fastspring
--
-- Inventory & order for restaurant
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pizza_fastspring` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `pizza_fastspring` ;

-- -----------------------------------------------------
-- Table `pizza_fastspring`.`inventory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizza_fastspring`.`inventory` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `pizza_fastspring`.`inventory` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Materials in quantity ordered from vendor, e.g.\ndough in lbs\nsausage in chubs\nsauce in cans (or whatever)',
  `name` VARCHAR(45) NOT NULL COMMENT '   e.g.\ndough_small, dough_medium, dough_garlicbread, …\nsauce_regular, sauce_white, sauce_chipotle\ntopping_sausage, topping_pepperoni\nwings',
  `quantity` INT NOT NULL,
  `quantity_low_warning` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `pizza_fastspring`.`category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizza_fastspring`.`category` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `pizza_fastspring`.`category` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'e.g. crust, sauce, topping',
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `pizza_fastspring`.`customization`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizza_fastspring`.`customization` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `pizza_fastspring`.`customization` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'This is just a notation and doesn’t affect cost.  i.e. don’t use this for pizza size\nHowever it is filtered by category, e.g.\ntopping: normal, light, extra',
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `category-customization`
    FOREIGN KEY (`id`)
    REFERENCES `pizza_fastspring`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `pizza_fastspring`.`item`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizza_fastspring`.`item` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `pizza_fastspring`.`item` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'e.g.\npizza_small, pizza_deepdish\ntopping_pepperoni\nsauce_regular, sauce_chipotle',
  `name` VARCHAR(45) NOT NULL,
  `cost` DECIMAL(6,2) NULL,
  `quantity_multiplier` DECIMAL(6,2) NULL COMMENT 'e.g.\ncrust_deepish = 1.5 lb dough\npepperoni_large = 0.1 chub pepperoni',
  PRIMARY KEY (`id`),
  CONSTRAINT `category-item`
    FOREIGN KEY (`id`)
    REFERENCES `pizza_fastspring`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `inventory`
    FOREIGN KEY (`id`)
    REFERENCES `pizza_fastspring`.`inventory` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `customization`
    FOREIGN KEY (`id`)
    REFERENCES `pizza_fastspring`.`customization` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
